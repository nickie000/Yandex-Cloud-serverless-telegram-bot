from aiogram import types, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ö–Ω–æ–ø–æ—á–∫–∏
butt_quest1 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 1?', callback_data='q1')
butt_quest2 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 2?', callback_data='q2')
butt_quest3 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 3?', callback_data='q3')
butt_quest4 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 4?', callback_data='q4')
butt_quest5 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 5?', callback_data='q5')

butt_quest6 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 6?', callback_data='q6')
butt_quest7 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 7?', callback_data='q7')
butt_quest8 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 8?', callback_data='q8')
butt_quest9 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 9?', callback_data='q9')
butt_quest10 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 10?', callback_data='q10')

butt_quest11 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 11?', callback_data='q11')
butt_quest12 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 12?', callback_data='q12')
butt_quest13 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 13?', callback_data='q13')
butt_quest14 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 14?', callback_data='q14')
butt_quest15 = InlineKeyboardButton('–í–æ–ø—Ä–æ—Å 15?', callback_data='q15')

butt_quest1_NEXT = InlineKeyboardButton('‚è©', callback_data='qnext1')
butt_quest1_BACK = InlineKeyboardButton('‚è™', callback_data='qback1')
butt_quest2_NEXT = InlineKeyboardButton('‚è©', callback_data='qnext2')
butt_quest2_BACK = InlineKeyboardButton('‚è™', callback_data='qback2')
butt_questNONE = InlineKeyboardButton('–ù–µ –Ω–∞—à–µ–ª –≤–æ–ø—Ä–æ—Å', callback_data='qnone')
butt_esc = InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º', callback_data='esc')
butt_boss = InlineKeyboardButton(text="–ö –±–æ—Å—Å—É", url='t.me/uhtoer')

# –ö–ª—è–≤–∏—â–∏
kb_1_page = InlineKeyboardMarkup(row_width=1).add(butt_quest1, butt_quest2, butt_quest3, butt_quest4, butt_quest5, butt_quest1_NEXT)

kb_2_page = InlineKeyboardMarkup(row_width=1).add(butt_quest6, butt_quest7, butt_quest8, butt_quest9, butt_quest10)
kb_2_page.row(butt_quest1_BACK, butt_quest2_NEXT)

kb_3_page = InlineKeyboardMarkup(row_width=1).add(butt_quest11, butt_quest12, butt_quest13, butt_quest14, butt_quest15)
kb_3_page.row(butt_quest2_BACK, butt_questNONE)

html = types.ParseMode.HTML

# –•—ç–Ω–¥–ª–µ—Ä—ã
async def matvey_butt(message: types.Message):
	
	await message.answer('ü§ñ')
	await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>!\n–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ß–∞–í–æ, –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç\n<pre>–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 / 3</pre>", reply_markup=kb_1_page, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 1 –≤–æ–ø—Ä–æ—Å–∞
async def quest_1(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 1-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 2 –≤–æ–ø—Ä–æ—Å–∞
async def quest_2(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 2-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 3 –≤–æ–ø—Ä–æ—Å–∞
async def quest_3(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 3-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 4 –≤–æ–ø—Ä–æ—Å–∞
async def quest_4(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 4-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 5 –≤–æ–ø—Ä–æ—Å–∞
async def quest_5(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 5-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 6 –≤–æ–ø—Ä–æ—Å–∞
async def quest_6(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 6-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 7 –≤–æ–ø—Ä–æ—Å–∞
async def quest_7(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 7-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 8 –≤–æ–ø—Ä–æ—Å–∞
async def quest_8(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 8-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 9 –≤–æ–ø—Ä–æ—Å–∞
async def quest_9(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 9-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 10 –≤–æ–ø—Ä–æ—Å–∞
async def quest_10(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 10-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 11 –≤–æ–ø—Ä–æ—Å–∞
async def quest_11(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 11-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 12 –≤–æ–ø—Ä–æ—Å–∞
async def quest_12(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 12-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 13 –≤–æ–ø—Ä–æ—Å–∞
async def quest_13(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 13-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 14 –≤–æ–ø—Ä–æ—Å–∞
async def quest_14(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 14-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ 15 –≤–æ–ø—Ä–æ—Å–∞
async def quest_15(callback: types.CallbackQuery):

    keyboard = InlineKeyboardMarkup().add(butt_esc)

    await callback.message.edit_text(f'–û—Ç–≤–µ—Ç –Ω–∞ 15-—ã–π –≤–æ–ø—Ä–æ—Å =)', reply_markup=keyboard, parse_mode=html)


# –ö–æ–º–∞–Ω–¥–∞ –ù–µ –Ω–∞—à–µ–ª
async def quest_none(callback: types.CallbackQuery):

    keyboard1 = InlineKeyboardMarkup().add(butt_boss, butt_esc)

    await callback.message.edit_text(f"–¢–æ–≥–¥–∞ —è —Ö–∑ —á—Ç–æ —Ç–µ–±–µ —Å–∫–∞–∑–∞—Ç—å, —à—É—Ä—É–π –∫ –±–æ—Å—Å—É", reply_markup=keyboard1, parse_mode=html)


# –ö–Ω–æ–ø–∫–∞ –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ
async def quest_esc(callback: types.CallbackQuery):

    await callback.message.edit_text(f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ß–∞–í–æ, –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç\n<pre>–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 / 3</pre>", reply_markup=kb_1_page, parse_mode=html)


# –ö–Ω–æ–ø–∫–∞ –°—Ç—Ä 1
async def quest_1_page(callback: types.CallbackQuery):

    await callback.message.edit_text(f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ß–∞–í–æ, –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç\n<pre>–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 / 3</pre>", reply_markup=kb_1_page, parse_mode=html)


# –ö–Ω–æ–ø–∫–∞ –°—Ç—Ä 2
async def quest_2_page(callback: types.CallbackQuery):

    await callback.message.edit_text(f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ß–∞–í–æ, –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç\n<pre>–°—Ç—Ä–∞–Ω–∏—Ü–∞ 2 / 3</pre>", reply_markup=kb_2_page, parse_mode=html)

# –ö–Ω–æ–ø–∫–∞ –°—Ç—Ä 3
async def quest_3_page(callback: types.CallbackQuery):

    await callback.message.edit_text(f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ß–∞–í–æ, –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç\n<pre>–°—Ç—Ä–∞–Ω–∏—Ü–∞ 3 / 3</pre>", reply_markup=kb_3_page, parse_mode=html)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
async def register_handlers(dp: Dispatcher):
    """Registration all handlers before processing update."""

    dp.register_message_handler(matvey_butt, commands='matvey')
    dp.register_callback_query_handler(quest_1, lambda c: c.data == 'q1')
    dp.register_callback_query_handler(quest_2, lambda c: c.data == 'q2')
    dp.register_callback_query_handler(quest_3, lambda c: c.data == 'q3')
    dp.register_callback_query_handler(quest_4, lambda c: c.data == 'q4')
    dp.register_callback_query_handler(quest_5, lambda c: c.data == 'q5')

    dp.register_callback_query_handler(quest_6, lambda c: c.data == 'q6')
    dp.register_callback_query_handler(quest_7, lambda c: c.data == 'q7')
    dp.register_callback_query_handler(quest_8, lambda c: c.data == 'q8')
    dp.register_callback_query_handler(quest_9, lambda c: c.data == 'q9')
    dp.register_callback_query_handler(quest_10, lambda c: c.data == 'q10')

    dp.register_callback_query_handler(quest_11, lambda c: c.data == 'q11')
    dp.register_callback_query_handler(quest_12, lambda c: c.data == 'q12')
    dp.register_callback_query_handler(quest_13, lambda c: c.data == 'q13')
    dp.register_callback_query_handler(quest_14, lambda c: c.data == 'q14')
    dp.register_callback_query_handler(quest_15, lambda c: c.data == 'q15')

    dp.register_callback_query_handler(quest_1_page, lambda c: c.data == 'qback1')
    dp.register_callback_query_handler(quest_2_page, lambda c: c.data == 'qnext1')
    dp.register_callback_query_handler(quest_2_page, lambda c: c.data == 'qback2')
    dp.register_callback_query_handler(quest_3_page, lambda c: c.data == 'qnext2')
    dp.register_callback_query_handler(quest_none, lambda c: c.data == 'qnone')
    dp.register_callback_query_handler(quest_esc, lambda c: c.data == 'esc')
