from aiogram import types, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
common_QA_butt = InlineKeyboardButton('Q&A', callback_data='common_QA')
common_Questionnaire_butt = InlineKeyboardButton('–ê–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data='common_Questionnare')
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
common_start_butt = InlineKeyboardMarkup(row_width=2).add(common_QA_butt, common_Questionnaire_butt)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
common_butts_for_ALL_ESCAPE = InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ', callback_data='list_of_methods')

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
common_butts_for_Questionnaire_FIO = InlineKeyboardButton(text='–§–ò–û:', callback_data='common_Questionnaire_FIO')
common_butts_for_Questionnaire_AGE = InlineKeyboardButton('–í–æ–∑—Ä–∞—Å—Ç:', callback_data='common_Questionnaire_AGE')
common_butts_for_Questionnaire_CITY = InlineKeyboardButton('–ì–æ—Ä–æ–¥:', callback_data='common_Questionnaire_CITY')

common_butts_for_Questionnaire_TG = InlineKeyboardButton('–¢–µ–ª–µ–≥—Ä–∞–º:', callback_data='common_Questionnaire_TG')
common_butts_for_Questionnaire_PHONE = InlineKeyboardButton('–¢–µ–ª–µ—Ñ–æ–Ω:', callback_data='common_Questionnaire_PHONE')
common_butts_for_Questionnaire_DELETE = InlineKeyboardButton('–û—á–∏—Å—Ç–∏—Ç—å:', callback_data='common_Questionnaire_DELETE')
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
common_butts_for_Questionnaire = InlineKeyboardMarkup(row_width=2).add(common_butts_for_Questionnaire_FIO, common_butts_for_Questionnaire_TG, 
                                                                       common_butts_for_Questionnaire_AGE, common_butts_for_Questionnaire_PHONE, 
                                                                       common_butts_for_Questionnaire_CITY, common_butts_for_Questionnaire_DELETE)
common_butts_for_Questionnaire.row(common_butts_for_ALL_ESCAPE)

html = types.ParseMode.HTML

""" 
          –∞–Ω–∫–µ—Ç–∞
    –§–ò–û     | –¢–µ–ª–µ–≥—Ä–∞–º
    –í–æ–∑—Ä–∞—Å—Ç | –¢–µ–ª–µ—Ñ–æ–Ω
    –ì–æ—Ä–æ–¥   | –û—á–∏—Å—Ç–∏—Ç—å
    
"""

async def start(message: types.Message):
    await message.answer_sticker(sticker=r'CAACAgIAAxkBAAEJB_xkZySN5Yw4AAHohKX87rJ8YPGyBA0AAm8AA9vbfgABmVtQqHuTgHQvBA')
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ë–æ—Ç –¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫\n–Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞ —á—Ç–æ —Å–ø–æ—Å–æ–±–µ–Ω –º–æ–π –ë–æ—Å—Å, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞\n<i>(–¥–ª—è —ç—Ç–æ–≥–æ –º–æ–π <a href="tg://user?id=582180705">–ë–æ—Å—Å</a> –¥–æ–ª–∂–µ–Ω –±—ã–ª —Å–æ–æ–±—â–∏—Ç—å <tg-spoiler>—Å–µ–∫—Ä–µ—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É</tg-spoiler></i>)', parse_mode=html, reply_markup=common_start_butt)


async def id_handler(message: types.Message):
    await message.answer(f'–í–∞—à ID: <code>{message.from_user.id}</code>', parse_mode=html)


async def common_Questionnaire(callback: types.CallbackQuery):
    await callback.message.edit_text('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã üìã\n–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –∏—Ö –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏–µ–π =)\n<pre>–ö–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç</pre>', reply_markup=common_butts_for_Questionnaire, parse_mode=html)


async def list_of_methods(callback: types.CallbackQuery):
    await callback.message.edit_text('–ú—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ —Å–ø–∏—Å–∫—É —Ñ—É–Ω–∫—Ü–∏–π', reply_markup=common_start_butt)

async def register_handlers(dp: Dispatcher):
    dp.register_callback_query_handler(list_of_methods, lambda c: c.data == 'list_of_methods')
    dp.register_message_handler(start, commands='start')
    dp.register_message_handler(id_handler, commands='id')
    dp.register_callback_query_handler(common_Questionnaire, lambda c: c.data == 'common_Questionnare')
